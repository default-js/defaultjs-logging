(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})}};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),e.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var t={};e.r(t),e.d(t,{Appender:()=>s,ConsoleAppender:()=>y,HtmlAppender:()=>_,InteligentBrowserAppender:()=>L,LogLevel:()=>f,Logger:()=>v,LoggerFactory:()=>I,MemoryAppender:()=>R,utils:()=>o});const n={dateAsString:function(e){if(!e instanceof Date)return"";let t="";return t+=e.getFullYear()+".",e.getMonth()<10?t+="0"+e.getMonth():t+=e.getMonth(),t+=".",e.getDate()<10?t+="0"+e.getDate():t+=e.getDate(),t+=" ",e.getHours()<10?t+="0"+e.getHours():t+=e.getHours(),t+=":",e.getMinutes()<10?t+="0"+e.getMinutes():t+=e.getMinutes(),t+=":",e.getSeconds()<10?t+="0"+e.getSeconds():t+=e.getSeconds(),t+=":",e.getMilliseconds()<10&&(t+="00"+e.getMilliseconds()),e.getMilliseconds()<100?t+="0"+e.getMilliseconds():t+=e.getMilliseconds(),t}},o={DateUtils:n},r=new Map;class s{static getAppender(e){return r.get(e)}static register(e,t){r.set(e,t)}constructor(){}logMessage(e,t,n,o,r){}}class l{constructor(e,t){this.order=e,this.title=t}isIncluded(e){return this.order>=e.order}}const i=new l(0,"NOLOG"),g=new l(1,"ERROR"),a=new l(2,"WARN"),c=new l(3,"INFO"),u=new l(4,"DEBUG"),p=new l(5,"TRACE"),d={NOLOG:i,ERROR:g,WARN:a,INFO:c,DEBUG:u,TRACE:p,lookup:e=>"string"!=typeof e?i:d[e.toUpperCase()]||i},f=d,h=new class extends s{logMessage(e,t,o,r,s){if(f.NOLOG==s)return;let l=[];r&&l.push(n.dateAsString(r)," "),l.push("***",s.title,"*** ",o),e&&(l.push(" -> "),Array.isArray(e)?Array.prototype.push.apply(l,e):l.push(e)),t&&l.push(": ",t);let i=console.log;f.ERROR==s?i=console.error:f.WARN==s?i=console.warn:f.INFO==s?i=console.info:f.DEBUG==s?i=console.debug:f.TRACE==s&&(i=console.trace),i.apply(console,l)}};s.register("ConsoleAppender",h);const y=h,w="[data-log]",A=new class extends s{isAvailable(){return!!document.querySelector(w)}logMessage(e,t,o,r,s){const l=document.querySelector(w);if(!l)return;const i=document.createElement("div");i.setAttribute("class","log-entry "+s.title);let g=n.dateAsString(r||new Date)+" ***"+s.title+"*** "+o;return e&&(g+=" -> "+e),t&&(g+=": "+t),i.textContent=g,l.appendChild(i)}};s.register("HtmlAppender",A);const _=A,O=self||e.g||window||{},M=new class extends s{logMessage(e,t,n,o,r){(O.__LOG__ instanceof Array||(O.__LOG__=[]),O.__LOG__).push({date:o,logLevel:r,loggerName:n,message:e,exception:t})}};s.register("MemoryAppender",M);const R=M;let b;const m=new class extends s{logMessage(e,t,n,o,r){(b&&(b=console?y:_.isAvailable()?_:R),b).logMessage(e,t,n,o,r)}};s.register("IntelligentBrowserAppender",m);const L=m,v=class{constructor(e,t){this.name=e,this.__config__=t}get config(){return this.__config__}set config(e){this.__config__=e}logError(e,t){return this.log(e,t,f.ERROR)}logWarn(e,t){this.log(e,t,f.WARN)}logInfo(e,t){this.log(e,t,f.INFO)}logDebug(e,t){this.log(e,t,f.DEBUG)}asynclogTrace(e,t){this.log(e,t,f.TRACE)}async log(e,t,n){const o=this.name,r=new Date;setTimeout((async()=>{const s=await this.config;if(!s.logLevel.isIncluded(n))return;const{appenders:l}=s;for(let s of l)s.logMessage(e,t,o,r,n)}),100)}},S={filter:"",logLevel:"NOLOG",appenders:[]},E=(e,t,n)=>!(t&&n.filter.length>=t.filter.length)&&0==e.search(t.filter),N=e=>{const t=[];for(let n of e){const e=s.getAppender(n);e&&t.push(e)}return t},C=class{constructor(e){this.data=(async e=>{if(e instanceof Array)return e;if("string"==typeof e)return(async e=>(await fetch(new URL(e,location.href))).json())(e);const t=document.querySelector("[logging-properties]");return t&&t.hasAttribute("logging-properties")?(e=t.getAttribute("logging-properties"),JSON.parse(e)):void 0})(e)}async loggerConfig(e){const t=((e,t)=>{let n=S,o=n;for(let r of t)if(E(e,r,o)?o=r:r.filter||(n=r),null!=o&&o.filter==e)return o;return o||n})(e,await this.data);return{filter:t.filter,logLevel:f.lookup(t.logLevel),appenders:N(t.appenders)}}},D=new Map;let G=new C;const T=()=>{for(let[e,t]of D)t.config=G.loggerConfig(e)},I={newLogger:e=>(D.has(e)||D.set(e,new v(e,G.loggerConfig(e))),D.get(e)),config:async function(e){if(0==arguments.length)return G.data;G=new C(await e),T()}}})();
//# sourceMappingURL=module-bundle-defaultjs-logging.min.js.map